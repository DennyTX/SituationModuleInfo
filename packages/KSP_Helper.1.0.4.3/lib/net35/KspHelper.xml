<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KspHelper</name>
    </assembly>
    <members>
        <member name="T:KspHelper.Actions.ActionsHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:KspHelper.Actions.ActionsHelper.ReplaceAction(PartModule,System.String,BaseActionDelegate,System.Boolean)">
            <summary>
            Replace any KSP predefined action to custom user action 
            </summary>
            <param name="module">current part module</param>
            <param name="name">action name (Custom01 for example)</param>
            <param name="action">link to a new action delegate</param>
            <param name="isGuiName"></param>
        </member>
        <member name="M:KspHelper.Actions.ActionsHelper.CombineAction(PartModule,System.String,BaseActionDelegate,System.Boolean)">
            <summary>
            Combine any KSP action with a new delegate
            </summary>
            <param name="module">current part module</param>
            <param name="name">action name (Custom01 for example)</param>
            <param name="action">link to a new action delegate</param>
            <param name="isGuiName"></param>
        </member>
        <member name="M:KspHelper.Actions.ActionsHelper.GetAction(PartModule,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="module"></param>
            <param name="name"></param>
            <param name="isGuiName"></param>
            <returns></returns>
        </member>
        <member name="T:KspHelper.Actions.ActionInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:KspHelper.Actions.ActionInfo.Callback">
            <summary>
            
            </summary>
        </member>
        <member name="P:KspHelper.Actions.ActionInfo.CallbackAction">
            <summary>
            
            </summary>
        </member>
        <member name="T:KspHelper.Behavior.KspBehavior">
            <summary>
            
            </summary>
        </member>
        <member name="M:KspHelper.Behavior.KspBehavior.Awake">
            <summary>
            
            </summary>
        </member>
        <member name="M:KspHelper.Behavior.KspBehavior.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:KspHelper.Behavior.KspBehavior.Update">
            <summary>
            
            </summary>
        </member>
        <member name="M:KspHelper.Behavior.KspBehavior.OnGUI">
            <summary>
            
            </summary>
        </member>
        <member name="M:KspHelper.Behavior.KspBehavior.OnDestroy">
            <summary>
            
            </summary>
        </member>
        <member name="M:KspHelper.Behavior.KspBehavior.OnEnable">
            <summary>
            
            </summary>
        </member>
        <member name="M:KspHelper.Behavior.KspBehavior.FixedUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="M:KspHelper.Date.DateUtils.ConvertToGameDate(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return time in game format. Like digit.
            </summary>
            <param name="year">count of years</param>
            <param name="day">count of days</param>
            <param name="hour">count of hours</param>
            <param name="minute">count of minites</param>
            <param name="sec">count of sec</param>
            <returns></returns>
        </member>
        <member name="T:KspHelper.Events.EventsHelper">
            <summary>
            Helper for managing KspEvents
            </summary>
        </member>
        <member name="M:KspHelper.Events.EventsHelper.ReplaceEvent(PartModule,System.String,BaseEventDelegate,System.Boolean)">
            <summary>
            Replace pre-defined KSPEvent to a new delegate
            </summary>
            <param name="module">current module</param>
            <param name="name">event name ("Activate" for example)</param>
            <param name="replaceAction">new action delegate</param>
            <param name="isGuiName">name is guiName of event</param>
        </member>
        <member name="M:KspHelper.Events.EventsHelper.CombineEvent(PartModule,System.String,BaseEventDelegate,System.Boolean)">
            <summary>
            Combine pre-defined KSPEvent with a new delegate
            </summary>
            <param name="module">current module</param>
            <param name="name">event name ("Activate" for example)</param>
            <param name="replaceAction">new action delegate</param>
            <param name="isGuiName"></param>
        </member>
        <member name="M:KspHelper.Events.EventsHelper.GetEvent(PartModule,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="module"></param>
            <param name="name"></param>
            <param name="isGuiName"></param>
            <returns></returns>
        </member>
        <member name="T:KspHelper.Events.EventInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:KspHelper.Events.EventInfo.CallBack">
            <summary>
            
            </summary>
        </member>
        <member name="P:KspHelper.Events.EventInfo.CallbackEvent">
            <summary>
            
            </summary>
        </member>
        <member name="M:KspHelper.Utils.VesselUtils.GetModules``1(Vessel)">
            <summary>
             Get all modules from vessel by type
            </summary>
            <typeparam name="T">type of module(ModuleEngines ex.)</typeparam>
            <param name="vessel">current vessel</param>
            <returns></returns>
        </member>
        <member name="M:KspHelper.Utils.VesselUtils.GetPartsWithModules``1(Vessel)">
            <summary>
            Return all parts which contains module by type
            </summary>
            <typeparam name="T">type of module (ModuleEngines ex.)</typeparam>
            <param name="vessel">current vessel</param>
            <returns></returns>
        </member>
    </members>
</doc>
